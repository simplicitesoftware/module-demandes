#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: Demandes 0.1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    DemReqSup:
      type: object
      properties:
        demReqsupSupId:
          description: Supply
          type: string
        demReqsupSupId__demSupSprId__demSprName:
          description: Supply Suppliers Name
          type: string
        demReqsupSupId__demSupStockQuantity:
          description: Supply Stock quantity
          type: integer
        demReqsupReqId:
          description: Request
          type: string
        demReqsupSupId__demSupType:
          description: Supply Type
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        demReqsupQuantityOrdered:
          description: Quantity ordered
          type: integer
        demReqsupOrderChoice:
          description: Order or decrease stock
          type: array
          items:
            type: string
            enum:
            - ORDER
            - DECREASESTOCK
        demReqsupSupId__demSupName:
          description: Supply Name
          type: string
        demReqsupReqId__demReqTitle:
          description: Request Title
          type: string
        demReqsupReqId__demReqType:
          description: Request Type
          type: string
          enum:
          - RENTAL
          - PURCHASE
        demReqsupSupId__demSupAllocation:
          description: Supply Allocation
          type: string
          enum:
          - RENTAL
          - PURCHASE
        demReqsupSupId__demSupSprId:
          description: Supply Suppliers
          type: string
        demReqsupSupId__demSupReference:
          description: Supply Reference
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        demReqsupReqId__demReqReference:
          description: Request Reference
          type: string
        demReqsupReqId__demReqSupplyType:
          description: Request Supply type
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        demReqsupQuantityRequired:
          description: Quantity required
          type: integer
    DemRequestHistoric:
      type: object
      properties:
        row_idx:
          description: Version
          type: integer
        created_dt_hist:
          description: Date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        demReqRejectedReasonAdministrator:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - UNAVAILABLE
            - NOBUDGET
        row_id:
          description: Unique technical row ID
          type: string
        demReqRejectedReasonManager:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - NOTNECESSARY
            - NOBUDGET
        demReqStatus:
          description: Status
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        created_by_hist:
          description: User
          type: string
        row_ref_id:
          description: Reference
          type: string
    ArrayOfDemSupply:
      type: array
      items:
        $ref: '#/components/schemas/DemSupply'
    DemSupply:
      type: object
      properties:
        demSupType:
          description: Type
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        demSupReference:
          description: Reference
          type: string
        demSupName:
          description: Name
          type: string
        demSupDeliveryTimeDays:
          description: Delivery time in days
          type: integer
        demSupAllocation:
          description: Allocation
          type: string
          enum:
          - RENTAL
          - PURCHASE
        row_id:
          description: Unique technical row ID
          type: string
        demSupSprId:
          description: Suppliers
          type: string
        demSupStockQuantity:
          description: Stock quantity
          type: integer
        demSupDescription:
          description: Description
          type: string
        demSupPrice:
          description: Price
          type: number
        demSupSprId__demSprName:
          description: Suppliers Name
          type: string
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    DemRequest:
      type: object
      properties:
        demReqReference:
          description: Reference
          type: string
        demReqRequestDate:
          description: Request date
          type: string
          example: yyyy-MM-dd
        demReqType:
          description: Type
          type: string
          enum:
          - PURCHASE
          - RENTAL
        demReqReason:
          description: Reason of the request
          type: string
        demReqSupplyType:
          description: Supply type
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        demReqTitle:
          description: Title
          type: string
        demReqRejectedReasonAdministrator:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - NOBUDGET
            - UNAVAILABLE
        row_id:
          description: Unique technical row ID
          type: string
        demReqStatus:
          description: Status
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        demReqFutherInformation:
          description: Futher information
          type: string
        demReqRejectedReasonManager:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - NOBUDGET
            - NOTNECESSARY
    ArrayOfDemRequestHistoric:
      type: array
      items:
        $ref: '#/components/schemas/DemRequestHistoric'
    DemSupplier:
      type: object
      properties:
        demSprContactName:
          description: Contact name
          type: string
        demSprContactEmail:
          description: Contact e-mail
          type: string
        demSprContactPhone:
          description: Contact phone number
          type: string
        demSprName:
          description: Name
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        demSprContactLastName:
          description: Contact last name
          type: string
    DemRental:
      type: object
      properties:
        demReqReference:
          description: Reference
          type: string
        demReqRequestDate:
          description: Request date
          type: string
          example: yyyy-MM-dd
        demReqType:
          description: Type
          type: string
          enum:
          - RENTAL
          - PURCHASE
        demReqReason:
          description: Reason of the request
          type: string
        demRenEndDate:
          description: To
          type: string
          example: yyyy-MM-dd HH:mm:ss
        demReqTitle:
          description: Title
          type: string
        demRenEquipmentCondition:
          description: Equipment's condition
          type: string
        demReqFutherInformation:
          description: Futher information
          type: string
        demRenStartDate:
          description: From
          type: string
          example: yyyy-MM-dd HH:mm:ss
        demReqSupplyType:
          description: Supply type
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        demReqRejectedReasonAdministrator:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - UNAVAILABLE
            - NOBUDGET
        row_id:
          description: Unique technical row ID
          type: string
        demReqSprId:
          description: Suppliers
          type: string
        demReqStatus:
          description: Status
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        demReqRejectedReasonManager:
          description: Rejected reason
          type: array
          items:
            type: string
            enum:
            - NOTNECESSARY
            - NOBUDGET
    ArrayOfDemSupplier:
      type: array
      items:
        $ref: '#/components/schemas/DemSupplier'
    ArrayOfDemRequest:
      type: array
      items:
        $ref: '#/components/schemas/DemRequest'
    ArrayOfDemRental:
      type: array
      items:
        $ref: '#/components/schemas/DemRental'
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    ArrayOfDemReqSup:
      type: array
      items:
        $ref: '#/components/schemas/DemReqSup'
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/DemRental:
    get:
      summary: Search DemRental business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demrental-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemRental'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demRenStartDate
        description: Search filter for From
        required: false
      - schema:
          type: string
        in: query
        name: demReqReference
        description: Search filter for Reference
        required: false
      - schema:
          type: string
        in: query
        name: demRenEndDate
        description: Search filter for To
        required: false
      - schema:
          type: string
        in: query
        name: demReqTitle
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: demRenEquipmentCondition
        description: Search filter for Equipment's condition
        required: false
      - schema:
          type: string
          enum:
          - RENTAL
          - PURCHASE
        in: query
        name: demReqType
        description: Search filter for Type
        required: false
      - schema:
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        in: query
        name: demReqStatus
        description: Search filter for Status
        required: false
      - schema:
          type: string
        in: query
        name: demReqReason
        description: Search filter for Reason of the request
        required: false
      - schema:
          type: string
        in: query
        name: demReqFutherInformation
        description: Search filter for Futher information
        required: false
      - schema:
          type: string
        in: query
        name: demReqRequestDate
        description: Search filter for Request date
        required: false
      - schema:
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        in: query
        name: demReqSupplyType
        description: Search filter for Supply type
        required: false
      - schema:
          type: string
          enum:
          - UNAVAILABLE
          - NOBUDGET
        in: query
        name: demReqRejectedReasonAdministrator
        description: Search filter for Rejected reason
        required: false
      - schema:
          type: string
          enum:
          - NOTNECESSARY
          - NOBUDGET
        in: query
        name: demReqRejectedReasonManager
        description: Search filter for Rejected reason
        required: false
      - schema:
          type: string
        in: query
        name: demReqSprId
        description: Search filter for Suppliers
        required: false
      tags:
      - DemRental
  /rest/DemSupplier:
    get:
      summary: Search DemSupplier business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demsupplier-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemSupplier'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demSprName
        description: Search filter for Name
        required: false
      - schema:
          type: string
        in: query
        name: demSprContactLastName
        description: Search filter for Contact last name
        required: false
      - schema:
          type: string
        in: query
        name: demSprContactName
        description: Search filter for Contact name
        required: false
      - schema:
          type: string
        in: query
        name: demSprContactEmail
        description: Search filter for Contact e-mail
        required: false
      - schema:
          type: string
        in: query
        name: demSprContactPhone
        description: Search filter for Contact phone number
        required: false
      tags:
      - DemSupplier
  /rest/DemSupplier/{row_id}:
    post:
      summary: Create a new DemSupplierbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemSupplier'
      operationId: obj-demsupplier-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupplier'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupplier
    get:
      summary: Get a DemSupplier business object record
      security:
      - bearerAuth: []
      operationId: obj-demsupplier-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupplier'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemSupplier
    delete:
      summary: Delete a DemSupplier business object record
      security:
      - bearerAuth: []
      operationId: obj-demsupplier-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupplier
    put:
      summary: Update a DemSupplierbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemSupplier'
      operationId: obj-demsupplier-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupplier'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupplier
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/DemRequest:
    get:
      summary: Search DemRequest business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demrequest-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demReqReference
        description: Search filter for Reference
        required: false
      - schema:
          type: string
        in: query
        name: demReqTitle
        description: Search filter for Title
        required: false
      - schema:
          type: string
          enum:
          - PURCHASE
          - RENTAL
        in: query
        name: demReqType
        description: Search filter for Type
        required: false
      - schema:
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        in: query
        name: demReqStatus
        description: Search filter for Status
        required: false
      - schema:
          type: string
        in: query
        name: demReqReason
        description: Search filter for Reason of the request
        required: false
      - schema:
          type: string
        in: query
        name: demReqFutherInformation
        description: Search filter for Futher information
        required: false
      - schema:
          type: string
        in: query
        name: demReqRequestDate
        description: Search filter for Request date
        required: false
      - schema:
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        in: query
        name: demReqSupplyType
        description: Search filter for Supply type
        required: false
      - schema:
          type: string
          enum:
          - NOBUDGET
          - UNAVAILABLE
        in: query
        name: demReqRejectedReasonAdministrator
        description: Search filter for Rejected reason
        required: false
      - schema:
          type: string
          enum:
          - NOBUDGET
          - NOTNECESSARY
        in: query
        name: demReqRejectedReasonManager
        description: Search filter for Rejected reason
        required: false
      tags:
      - DemRequest
  /rest/DemReqSup:
    get:
      summary: Search DemReqSup business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demreqsup-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemReqSup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupReqId
        description: Search filter for Request
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupReqId__demReqReference
        description: Search filter for Request Reference
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupReqId__demReqTitle
        description: Search filter for Request Title
        required: false
      - schema:
          type: string
          enum:
          - RENTAL
          - PURCHASE
        in: query
        name: demReqsupReqId__demReqType
        description: Search filter for Request Type
        required: false
      - schema:
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        in: query
        name: demReqsupReqId__demReqSupplyType
        description: Search filter for Request Supply type
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupSupId
        description: Search filter for Supply
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupSupId__demSupReference
        description: Search filter for Supply Reference
        required: false
      - schema:
          type: integer
        in: query
        name: demReqsupSupId__demSupStockQuantity
        description: Search filter for Supply Stock quantity
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupSupId__demSupSprId
        description: Search filter for Supply Suppliers
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupSupId__demSupSprId__demSprName
        description: Search filter for Supply Suppliers Name
        required: false
      - schema:
          type: string
        in: query
        name: demReqsupSupId__demSupName
        description: Search filter for Supply Name
        required: false
      - schema:
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        in: query
        name: demReqsupSupId__demSupType
        description: Search filter for Supply Type
        required: false
      - schema:
          type: string
          enum:
          - RENTAL
          - PURCHASE
        in: query
        name: demReqsupSupId__demSupAllocation
        description: Search filter for Supply Allocation
        required: false
      - schema:
          type: string
          enum:
          - ORDER
          - DECREASESTOCK
        in: query
        name: demReqsupOrderChoice
        description: Search filter for Order or decrease stock
        required: false
      - schema:
          type: integer
        in: query
        name: demReqsupQuantityOrdered
        description: Search filter for Quantity ordered
        required: false
      - schema:
          type: integer
        in: query
        name: demReqsupQuantityRequired
        description: Search filter for Quantity required
        required: false
      tags:
      - DemReqSup
  /rest/DemRental/{row_id}:
    post:
      summary: Create a new DemRentalbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRental'
      operationId: obj-demrental-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRental'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRental
    get:
      summary: Get a DemRental business object record
      security:
      - bearerAuth: []
      operationId: obj-demrental-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRental'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemRental
    delete:
      summary: Delete a DemRental business object record
      security:
      - bearerAuth: []
      operationId: obj-demrental-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRental
    put:
      summary: Update a DemRentalbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRental'
      operationId: obj-demrental-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRental'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRental
  /rest/DemSupply:
    get:
      summary: Search DemSupply business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-demsupply-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemSupply'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: demSupReference
        description: Search filter for Reference
        required: false
      - schema:
          type: string
        in: query
        name: demSupName
        description: Search filter for Name
        required: false
      - schema:
          type: string
          enum:
          - FURNITURE
          - IT
          - OFFICE
        in: query
        name: demSupType
        description: Search filter for Type
        required: false
      - schema:
          type: string
        in: query
        name: demSupDescription
        description: Search filter for Description
        required: false
      - schema:
          type: integer
        in: query
        name: demSupDeliveryTimeDays
        description: Search filter for Delivery time in days
        required: false
      - schema:
          type: integer
        in: query
        name: demSupStockQuantity
        description: Search filter for Stock quantity
        required: false
      - schema:
          type: number
        in: query
        name: demSupPrice
        description: Search filter for Price
        required: false
      - schema:
          type: string
          enum:
          - RENTAL
          - PURCHASE
        in: query
        name: demSupAllocation
        description: Search filter for Allocation
        required: false
      - schema:
          type: string
        in: query
        name: demSupSprId
        description: Search filter for Suppliers
        required: false
      - schema:
          type: string
        in: query
        name: demSupSprId__demSprName
        description: Search filter for Suppliers Name
        required: false
      tags:
      - DemSupply
  /rest/DemRequest/{row_id}:
    post:
      summary: Create a new DemRequestbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRequest'
      operationId: obj-demrequest-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequest
    get:
      summary: Get a DemRequest business object record
      security:
      - bearerAuth: []
      operationId: obj-demrequest-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemRequest
    delete:
      summary: Delete a DemRequest business object record
      security:
      - bearerAuth: []
      operationId: obj-demrequest-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequest
    put:
      summary: Update a DemRequestbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRequest'
      operationId: obj-demrequest-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequest'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequest
  /rest/DemRequestHistoric:
    get:
      summary: Search DemRequestHistoric business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-demrequesthistoric-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfDemRequestHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: row_ref_id
        description: Search filter for Reference
        required: false
      - schema:
          type: integer
        in: query
        name: row_idx
        description: Search filter for Version
        required: false
      - schema:
          type: string
        in: query
        name: created_by_hist
        description: Search filter for User
        required: false
      - schema:
          type: string
        in: query
        name: created_dt_hist
        description: Search filter for Date
        required: false
      - schema:
          type: string
          enum:
          - NOTNECESSARY
          - NOBUDGET
        in: query
        name: demReqRejectedReasonManager
        description: Search filter for Rejected reason
        required: false
      - schema:
          type: string
          enum:
          - UNAVAILABLE
          - NOBUDGET
        in: query
        name: demReqRejectedReasonAdministrator
        description: Search filter for Rejected reason
        required: false
      - schema:
          type: string
          enum:
          - DRAFT
          - PENDING
          - VALIDATED
          - REJECTEDMAN
          - REQUESTFUTHERINFO
          - PROCESSING
          - REJECTEDADM
          - CLOSED
          - CANCELLED
        in: query
        name: demReqStatus
        description: Search filter for Status
        required: false
      tags:
      - DemRequestHistoric
  /rest/DemSupply/{row_id}:
    post:
      summary: Create a new DemSupplybusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemSupply'
      operationId: obj-demsupply-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupply'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupply
    get:
      summary: Get a DemSupply business object record
      security:
      - bearerAuth: []
      operationId: obj-demsupply-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupply'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemSupply
    delete:
      summary: Delete a DemSupply business object record
      security:
      - bearerAuth: []
      operationId: obj-demsupply-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupply
    put:
      summary: Update a DemSupplybusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemSupply'
      operationId: obj-demsupply-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemSupply'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemSupply
  /rest/DemRequestHistoric/{row_id}:
    post:
      summary: Create a new DemRequestHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRequestHistoric'
      operationId: obj-demrequesthistoric-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequestHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequestHistoric
    get:
      summary: Get a DemRequestHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-demrequesthistoric-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequestHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemRequestHistoric
    delete:
      summary: Delete a DemRequestHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-demrequesthistoric-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequestHistoric
    put:
      summary: Update a DemRequestHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemRequestHistoric'
      operationId: obj-demrequesthistoric-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemRequestHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemRequestHistoric
  /rest/DemReqSup/{row_id}:
    post:
      summary: Create a new DemReqSupbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemReqSup'
      operationId: obj-demreqsup-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemReqSup'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemReqSup
    get:
      summary: Get a DemReqSup business object record
      security:
      - bearerAuth: []
      operationId: obj-demreqsup-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemReqSup'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - DemReqSup
    delete:
      summary: Delete a DemReqSup business object record
      security:
      - bearerAuth: []
      operationId: obj-demreqsup-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemReqSup
    put:
      summary: Update a DemReqSupbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemReqSup'
      operationId: obj-demreqsup-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemReqSup'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - DemReqSup
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module Demandes
  title: Demandes
  version: '0.1'
tags:
- name: DemRental
  description: Rental request
- name: DemReqSup
  description: Request/Supply
- name: DemRequest
  description: Purchase request
- name: DemRequestHistoric
  description: Request historic
- name: DemSupplier
  description: Suppliers
- name: DemSupply
  description: Supplies
